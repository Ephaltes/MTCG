@echo off

REM --------------------------------------------------
REM Monster Trading Cards Game
REM --------------------------------------------------
title Monster Trading Cards Game
echo CURL Testing for Monster Trading Cards Game
echo.

REM --------------------------------------------------
echo 1) Create Users (Registration)
REM Create User
curl -X POST http://localhost:10001/users --header "Content-Type: application/json" -d "{\"Username\":\"kienboec\", \"Password\":\"daniel\"}"
echo.
curl -X POST http://localhost:10001/users --header "Content-Type: application/json" -d "{\"Username\":\"altenhof\", \"Password\":\"markus\"}"
echo.
curl -X POST http://localhost:10001/users --header "Content-Type: application/json" -d "{\"Username\":\"admin\",    \"Password\":\"istrator\"}"
echo.

echo should fail:
curl -X POST http://localhost:10001/users --header "Content-Type: application/json" -d "{\"Username\":\"kienboec\", \"Password\":\"daniel\"}"
echo.
curl -X POST http://localhost:10001/users --header "Content-Type: application/json" -d "{\"Username\":\"kienboec\", \"Password\":\"different\"}"
echo. 
echo.

REM --------------------------------------------------
echo 2) Login Users
curl -X POST http://localhost:10001/sessions --header "Content-Type: application/json" -d "{\"Username\":\"kienboec\", \"Password\":\"daniel\"}"
echo.
curl -X POST http://localhost:10001/sessions --header "Content-Type: application/json" -d "{\"Username\":\"altenhof\", \"Password\":\"markus\"}"
echo.
curl -X POST http://localhost:10001/sessions --header "Content-Type: application/json" -d "{\"Username\":\"admin\",    \"Password\":\"istrator\"}"
echo.

echo should fail:
curl -X POST http://localhost:10001/sessions --header "Content-Type: application/json" -d "{\"Username\":\"kienboec\", \"Password\":\"different\"}"
echo.
echo.

REM --------------------------------------------------
REM Dragon = 1 , FireElf = 2 , Goblin = 3 ,Knight = 4 ,Kraken = 5 , Orc = 6 , Wizard 7
REM MonsterCard = 1, SpellCard = 2
REM Normal = 0 , Fire = 1, Water = 2
echo 3) create packages (done by "admin")
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\",  \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 10.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 50.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2,  \"Damage\": 20.0}, { \"Name\":\"Ork\", \"Race\":6, \"CardType\":1, \"ElementType\":0, \"Damage\": 45.0}, { \"Name\":\"FireSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 25.0}]}"
echo.																																																																																		 				    
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\":  9.0}, {\"Name\":\"Dragon\",\"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 55.0}, { \"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 21.0}, { \"Name\":\"Ork\", \"Race\":6, \"CardType\":1, \"ElementType\":0, \"Damage\": 55.0}, {\"Name\":\"WaterSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 23.0}]}"
echo.																																																																																		 				    
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 11.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 70.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 22.0}, { \"Name\":\"Ork\", \"Race\":6, \"CardType\":1, \"ElementType\":0, \"Damage\": 40.0}, { \"Name\":\"RegularSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 28.0}]}"
echo.																																																																																		 				    
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 10.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 50.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 20.0}, { \"Name\":\"Ork\", \"Race\":6, \"CardType\":1, \"ElementType\":0, \"Damage\": 45.0}, { \"Name\":\"WaterSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 25.0}]}"
echo.																																																																																		 				    
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\":  9.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 55.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 21.0}, { \"Name\":\"Ork\", \"Race\":6, \"CardType\":1, \"ElementType\":0, \"Damage\": 55.0}, {\"Name\":\"FireSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 23.0}]}"
echo.																																																																																		 				    
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 11.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 70.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 22.0}, {\"Name\":\"Ork\",\"Race\":6, \"CardType\":1, \"ElementType\":0,  \"Damage\": 40.0}, {\"Name\":\"RegularSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 28.0}]}"
echo.
echo Should Fail
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"CardType\":1, \"ElementType\":2, \"Damage\": 11.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 70.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 22.0}, {\"Name\":\"Ork\",\"Race\":6, \"CardType\":1, \"ElementType\":0,  \"Damage\": 40.0}, {\"Name\":\"RegularSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 28.0}]}"
echo.
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"ElementType\":2, \"Damage\": 11.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 70.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 22.0}, {\"Name\":\"Ork\",\"Race\":6, \"CardType\":1, \"ElementType\":0,  \"Damage\": 40.0}, {\"Name\":\"RegularSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 28.0}]}"
echo.
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\", \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 0.0}, {\"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 70.0}, {\"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 22.0}, {\"Name\":\"Ork\",\"Race\":6, \"CardType\":1, \"ElementType\":0,  \"Damage\": 40.0}, {\"Name\":\"RegularSpell\",  \"CardType\":2, \"ElementType\":2, \"Damage\": 28.0}]}"
echo.

REM --------------------------------------------------
echo 4) acquire packages kienboec
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d ""
echo.
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d ""
echo.
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d ""
echo.
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d ""
echo.
echo should fail (no money):
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d ""
echo.
echo.

REM --------------------------------------------------
echo 5) acquire packages altenhof
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d ""
echo.
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d ""
echo.
echo should fail (no package):
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d ""
echo.
echo.

REM --------------------------------------------------
echo 6) add new packages
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\",  \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 10.0}, { \"Name\":\"RegularSpell\", \"CardType\":2, \"ElementType\":0, \"Damage\": 50.0}, {\"Name\":\"Knight\", \"Race\":4, \"CardType\":1, \"Damage\": 20.0}, { \"Name\":\"RegularSpell\", \"CardType\":2, \"ElementType\":0, \"Damage\": 45.0}, { \"Name\":\"FireElf\", \"Race\":2, \"CardType\":1, \"Damage\": 25.0}]}"
echo.
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\",  \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\":  9.0}, { \"Name\":\"FireSpell\", \"CardType\":2, \"ElementType\":1, \"Damage\": 55.0}, {\"Name\":\"Knight\", \"Race\":4, \"CardType\":1, \"Damage\": 21.0}, { \"Name\":\"FireSpell\", \"CardType\":2, \"ElementType\":1, \"Damage\": 55.0}, {\"Name\":\"FireElf\", \"Race\":2, \"CardType\":1, \"Damage\": 23.0}]}"
echo.
curl -X POST http://localhost:10001/packages --header "Content-Type: application/json" --header "Authorization: Basic admin-mtcgToken" -d "{\"CardsInPackage\":[{\"Name\":\"WaterGoblin\",  \"Race\":3, \"CardType\":1, \"ElementType\":2, \"Damage\": 11.0}, { \"Name\":\"Dragon\", \"Race\":1, \"CardType\":1, \"ElementType\":0, \"Damage\": 70.0}, {\"Name\":\"Knight\", \"Race\":4, \"CardType\":1, \"Damage\": 22.0}, { \"Name\":\"WaterSpell\", \"CardType\":2, \"ElementType\":2, \"Damage\": 40.0}, { \"Name\":\"FireElf\", \"Race\":2, \"CardType\":1, \"Damage\": 28.0}]}"
echo.
echo.

REM --------------------------------------------------
echo 7) acquire newly created packages altenhof
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d ""
echo.
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d ""
echo.
echo should fail (no money):
curl -X POST http://localhost:10001/transactions/packages --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d ""
echo.
echo.

REM --------------------------------------------------
echo 8) show all acquired cards kienboec
curl -X GET http://localhost:10001/cards --header "Authorization: Basic kienboec-mtcgToken"
echo should fail (no token)
curl -X GET http://localhost:10001/cards 
echo.
echo.

REM --------------------------------------------------
echo 9) show all acquired cards altenhof
curl -X GET http://localhost:10001/cards --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 10) show unconfigured deck
curl -X GET http://localhost:10001/deck --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 11) configure deck
curl -X PUT http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d "[\"15017324b4b14b4591347433b2febaec\", \"8c0f2eb43121481faddf56d93369981d\", \"8fac023ef8294bd281143dda68fc7e46\", \"5683c8cfc0a943549ea3e1060d6ba6da\"]"
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X PUT http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "[\"e196d1eac1554464a2f1b9bdae138327\", \"d9a35bcd01374f8da580f46113ead117\", \"4aa102f44d3a4ce1a898a208f2e098e4\", \"051b3df0022c43c886890e1a32b9c3aa\"]"
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.
echo should fail and show original from before (not my cards):
curl -X PUT http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "[\"15017324b4b14b4591347433b2febaec\", \"8c0f2eb43121481faddf56d93369981d\", \"8fac023ef8294bd281143dda68fc7e46\", \"5683c8cfc0a943549ea3e1060d6ba6da\"]"
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.
echo Updating Deck with only 3 Cards and then adding one card after
curl -X PUT http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "[\"e196d1eac1554464a2f1b9bdae138327\", \"d9a35bcd01374f8da580f46113ead117\", \"4aa102f44d3a4ce1a898a208f2e098e4\"]"
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
curl -X POST http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "\"051b3df0022c43c886890e1a32b9c3aa\""
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo Should fail post only accept 1 card
curl -X POST http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "[\"15017324b4b14b4591347433b2febaec\",\"8c0f2eb43121481faddf56d93369981d\"]"
echo Should fail not my card
curl -X DELETE http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "\"15017324b4b14b4591347433b2febaec\""
echo.
curl -X DELETE http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "\"e196d1eac1554464a2f1b9bdae138327\""
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
curl -X POST http://localhost:10001/deck --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "\"e196d1eac1554464a2f1b9bdae138327\""
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.


REM --------------------------------------------------
echo 12) show configured deck 
curl -X GET http://localhost:10001/deck --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/deck --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 13) show configured deck different representation
echo kienboec
curl -X GET http://localhost:10001/deck/plain --header "Authorization: Basic kienboec-mtcgToken"
echo.
echo.
echo altenhof
curl -X GET http://localhost:10001/deck/plain --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 14) edit user data
echo.
curl -X GET http://localhost:10001/users/kienboec --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/users/altenhof --header "Authorization: Basic altenhof-mtcgToken"
echo.
curl -X PUT http://localhost:10001/users/kienboec --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d "{\"DisplayName\": \"Kienboeck\",  \"Description\": \"me playin...\", \"Image\": \":-)\"}"
echo.
curl -X PUT http://localhost:10001/users/altenhof --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "{\"DisplayName\": \"Altenhofer\", \"Description\": \"me codin...\",  \"Image\": \":-D\"}"
echo.
curl -X GET http://localhost:10001/users/kienboec --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/users/altenhof --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.
echo should fail:
curl -X GET http://localhost:10001/users/altenhof --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/users/kienboec --header "Authorization: Basic altenhof-mtcgToken"
echo.
curl -X PUT http://localhost:10001/users/kienboec --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "{\"DisplayName\": \"Hoax\",  \"Description\": \"me playin...\", \"Image\": \":-)\"}"
echo.
curl -X PUT http://localhost:10001/users/altenhof --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d "{\"DisplayName\": \"Hoax\", \"Description\": \"me codin...\",  \"Image\": \":-D\"}"
echo.
curl -X GET http://localhost:10001/users/someGuy  --header "Authorization: Basic kienboec-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 15) stats
curl -X GET http://localhost:10001/stats --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/stats --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 16) scoreboard
curl -X GET http://localhost:10001/score --header "Authorization: Basic kienboec-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 17) battle
start /b "kienboec battle" curl -X POST http://localhost:10001/battles --header "Authorization: Basic kienboec-mtcgToken"
start /b "altenhof battle" curl -X POST http://localhost:10001/battles --header "Authorization: Basic altenhof-mtcgToken"
ping localhost -n 10 >NUL 2>NUL

REM --------------------------------------------------
echo 18) Stats 
echo kienboec
curl -X GET http://localhost:10001/stats --header "Authorization: Basic kienboec-mtcgToken"
echo.
echo altenhof
curl -X GET http://localhost:10001/stats --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 19) scoreboard
curl -X GET http://localhost:10001/score --header "Authorization: Basic kienboec-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 20) trade
echo check trading deals
curl -X GET http://localhost:10001/tradings --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/cards --header "Authorization: Basic kienboec-mtcgToken"
echo create trading deal
curl -X POST http://localhost:10001/tradings --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d "{\"CardToTrade\": {\"id\":\"c989eb4e9c9e4e6080a0b82d0e5f0f11\"}, \"WantMinDamage\": 5 }"
echo.
echo check trading deals
curl -X GET http://localhost:10001/tradings --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/tradings --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo delete trading deals
curl -X DELETE http://localhost:10001/tradings/43ccca68df01442f9f596f8df1b1fc9a --header "Authorization: Basic kienboec-mtcgToken"
echo.
echo.

REM --------------------------------------------------
echo 21) check trading deals
curl -X GET http://localhost:10001/tradings  --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/cards --header "Authorization: Basic altenhof-mtcgToken"
curl -X POST http://localhost:10001/tradings --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d "{\"CardToTrade\": {\"id\":\"c989eb4e9c9e4e6080a0b82d0e5f0f11\"},\"WantMinDamage\": 4 }"
echo check trading deals
curl -X GET http://localhost:10001/tradings  --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/tradings  --header "Authorization: Basic altenhof-mtcgToken"
echo.
echo try to trade with yourself (should fail)
curl -X POST http://localhost:10001/tradings/3b93a05a26104c4ca4048caeb316fb46 --header "Content-Type: application/json" --header "Authorization: Basic kienboec-mtcgToken" -d "\"4ec8b269-0dfa-4f97-809a-2c63fe2a0025\""
echo.
echo try to trade 
echo.
curl -X GET http://localhost:10001/cards --header "Authorization: Basic altenhof-mtcgToken"
curl -X POST http://localhost:10001/tradings/3b93a05a26104c4ca4048caeb316fb46 --header "Content-Type: application/json" --header "Authorization: Basic altenhof-mtcgToken" -d "\"9dfdf3a00f5f406ab2f5d56467e1e179\""
echo.
curl -X GET http://localhost:10001/tradings --header "Authorization: Basic kienboec-mtcgToken"
echo.
curl -X GET http://localhost:10001/tradings --header "Authorization: Basic altenhof-mtcgToken"
echo.

REM --------------------------------------------------
echo end...

REM this is approx a sleep 
ping localhost -n 100 >NUL 2>NUL
@echo on
